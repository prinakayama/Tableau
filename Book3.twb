<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0524.1403                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0524.1403)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Percentual Saldo Analise' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='0.40'>
        <calculation class='tableau' formula='0.40' />
      </column>
    </datasource>
    <datasource caption='Superstore_Superstore' inline='true' name='federated.1dumzip0gsafdq14smjow1t4x5gq' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore_Superstore' name='textscan.0f46fnf04cjv4c1bdac5m1bwhpqd'>
            <connection class='textscan' directory='C:/Users/pri_f/OneDrive/Documents/My Tableau Repository' filename='Superstore_Superstore.csv' password='' server='' />
          </named-connection>
          <named-connection caption='States_Migrated Data' name='textscan.1m3zgvr0wh4czu1h0kh3e1hqe4z9'>
            <connection class='textscan' directory='C:/Users/pri_f/OneDrive/Documents/My Tableau Repository' filename='States_Migrated Data.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Bank_Migrated Data' name='textscan.0pt0d6j1nxauku1and5921huqdes'>
            <connection class='textscan' directory='C:/Users/pri_f/OneDrive/Documents/My Tableau Repository' filename='Bank_Migrated Data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0pt0d6j1nxauku1and5921huqdes' name='Bank_Migrated Data.csv' table='[Bank_Migrated Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
            <column datatype='string' name='Conta Bancária' ordinal='0' />
            <column datatype='integer' name='Saldo Atual' ordinal='1' />
            <column datatype='integer' name='Número de registros' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0f46fnf04cjv4c1bdac5m1bwhpqd' name='Superstore_Superstore.csv' table='[Superstore_Superstore#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
              <column datatype='string' name='Categoria' ordinal='0' />
              <column datatype='string' name='Cidade' ordinal='1' />
              <column datatype='string' name='Pais' ordinal='2' />
              <column datatype='string' name='ID Cliente' ordinal='3' />
              <column datatype='string' name='Nome Cliente' ordinal='4' />
              <column datatype='date' name='Data da Nota Fiscal' ordinal='5' />
              <column datatype='string' name='Numero da Nota Fiscal' ordinal='6' />
              <column datatype='integer' name='Código Postal' ordinal='7' />
              <column datatype='string' name='ID Produto' ordinal='8' />
              <column datatype='string' name='Nome do Produto' ordinal='9' />
              <column datatype='string' name='Região' ordinal='10' />
              <column datatype='integer' name='ID da Linha' ordinal='11' />
              <column datatype='string' name='Segmento' ordinal='12' />
              <column datatype='date' name='Data do Envio' ordinal='13' />
              <column datatype='string' name='Modo de Envio' ordinal='14' />
              <column datatype='string' name='Estado' ordinal='15' />
              <column datatype='string' name='Sub Categoria' ordinal='16' />
              <column datatype='string' name='Disconto' ordinal='17' />
              <column datatype='string' name='Log da Venda' ordinal='18' />
              <column datatype='integer' name='Número de Registros' ordinal='19' />
              <column datatype='real' name='Lucro' ordinal='20' />
              <column datatype='integer' name='Quantidade' ordinal='21' />
              <column datatype='real' name='Vendas' ordinal='22' />
            </columns>
          </relation>
          <relation connection='textscan.0pt0d6j1nxauku1and5921huqdes' name='Bank_Migrated Data.csv' table='[Bank_Migrated Data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
              <column datatype='string' name='Conta Bancária' ordinal='0' />
              <column datatype='integer' name='Saldo Atual' ordinal='1' />
              <column datatype='integer' name='Número de registros' ordinal='2' />
            </columns>
          </relation>
          <relation connection='textscan.1m3zgvr0wh4czu1h0kh3e1hqe4z9' name='States_Migrated Data.csv' table='[States_Migrated Data#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
              <column datatype='integer' name='Coluna' ordinal='0' />
              <column datatype='integer' name='Linha' ordinal='1' />
              <column datatype='string' name='Estado' ordinal='2' />
              <column datatype='string' name='Sigla do Estado' ordinal='3' />
              <column datatype='integer' name='Número de registros' ordinal='4' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Categoria]' value='[Superstore_Superstore.csv].[Categoria]' />
          <map key='[Cidade]' value='[Superstore_Superstore.csv].[Cidade]' />
          <map key='[Coluna]' value='[States_Migrated Data.csv].[Coluna]' />
          <map key='[Conta Bancária]' value='[Bank_Migrated Data.csv].[Conta Bancária]' />
          <map key='[Código Postal]' value='[Superstore_Superstore.csv].[Código Postal]' />
          <map key='[Data da Nota Fiscal]' value='[Superstore_Superstore.csv].[Data da Nota Fiscal]' />
          <map key='[Data do Envio]' value='[Superstore_Superstore.csv].[Data do Envio]' />
          <map key='[Disconto]' value='[Superstore_Superstore.csv].[Disconto]' />
          <map key='[Estado (States_Migrated Data.csv)]' value='[States_Migrated Data.csv].[Estado]' />
          <map key='[Estado]' value='[Superstore_Superstore.csv].[Estado]' />
          <map key='[ID Cliente]' value='[Superstore_Superstore.csv].[ID Cliente]' />
          <map key='[ID Produto]' value='[Superstore_Superstore.csv].[ID Produto]' />
          <map key='[ID da Linha]' value='[Superstore_Superstore.csv].[ID da Linha]' />
          <map key='[Linha]' value='[States_Migrated Data.csv].[Linha]' />
          <map key='[Log da Venda]' value='[Superstore_Superstore.csv].[Log da Venda]' />
          <map key='[Lucro]' value='[Superstore_Superstore.csv].[Lucro]' />
          <map key='[Modo de Envio]' value='[Superstore_Superstore.csv].[Modo de Envio]' />
          <map key='[Nome Cliente]' value='[Superstore_Superstore.csv].[Nome Cliente]' />
          <map key='[Nome do Produto]' value='[Superstore_Superstore.csv].[Nome do Produto]' />
          <map key='[Numero da Nota Fiscal]' value='[Superstore_Superstore.csv].[Numero da Nota Fiscal]' />
          <map key='[Número de Registros]' value='[Superstore_Superstore.csv].[Número de Registros]' />
          <map key='[Número de registros (Bank_Migrated Data.csv)]' value='[Bank_Migrated Data.csv].[Número de registros]' />
          <map key='[Número de registros]' value='[States_Migrated Data.csv].[Número de registros]' />
          <map key='[Pais]' value='[Superstore_Superstore.csv].[Pais]' />
          <map key='[Quantidade]' value='[Superstore_Superstore.csv].[Quantidade]' />
          <map key='[Região]' value='[Superstore_Superstore.csv].[Região]' />
          <map key='[Saldo Atual]' value='[Bank_Migrated Data.csv].[Saldo Atual]' />
          <map key='[Segmento]' value='[Superstore_Superstore.csv].[Segmento]' />
          <map key='[Sigla do Estado]' value='[States_Migrated Data.csv].[Sigla do Estado]' />
          <map key='[Sub Categoria]' value='[Superstore_Superstore.csv].[Sub Categoria]' />
          <map key='[Vendas]' value='[Superstore_Superstore.csv].[Vendas]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Bank_Migrated Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[States_Migrated Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Categoria</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Categoria]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Categoria</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cidade</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Cidade]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Cidade</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pais</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pais]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Pais</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID Cliente</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ID Cliente]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>ID Cliente</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nome Cliente</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Nome Cliente]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Nome Cliente</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data da Nota Fiscal</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Data da Nota Fiscal]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Data da Nota Fiscal</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Numero da Nota Fiscal</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Numero da Nota Fiscal]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Numero da Nota Fiscal</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Código Postal</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Código Postal]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Código Postal</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID Produto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ID Produto]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>ID Produto</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nome do Produto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Nome do Produto]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Nome do Produto</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Região</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Região]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Região</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID da Linha</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID da Linha]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>ID da Linha</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segmento</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Segmento]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Segmento</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Data do Envio</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Data do Envio]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Data do Envio</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Modo de Envio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Modo de Envio]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Modo de Envio</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estado</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Estado]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Estado</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub Categoria</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sub Categoria]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Sub Categoria</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Disconto</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Disconto]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Disconto</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Log da Venda</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Log da Venda]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Log da Venda</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Número de Registros</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Número de Registros]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Número de Registros</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lucro</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lucro]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Lucro</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantidade</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantidade]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Quantidade</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Vendas</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Vendas]</local-name>
            <parent-name>[Superstore_Superstore.csv]</parent-name>
            <remote-alias>Vendas</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Conta Bancária</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Conta Bancária]</local-name>
            <parent-name>[Bank_Migrated Data.csv]</parent-name>
            <remote-alias>Conta Bancária</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bank_Migrated Data.csv_D58785A74B514CB7ABF36824D7324020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Saldo Atual</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Saldo Atual]</local-name>
            <parent-name>[Bank_Migrated Data.csv]</parent-name>
            <remote-alias>Saldo Atual</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bank_Migrated Data.csv_D58785A74B514CB7ABF36824D7324020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Número de registros</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Número de registros (Bank_Migrated Data.csv)]</local-name>
            <parent-name>[Bank_Migrated Data.csv]</parent-name>
            <remote-alias>Número de registros</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Bank_Migrated Data.csv_D58785A74B514CB7ABF36824D7324020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Coluna</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Coluna]</local-name>
            <parent-name>[States_Migrated Data.csv]</parent-name>
            <remote-alias>Coluna</remote-alias>
            <ordinal>26</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[States_Migrated Data.csv_64B477EE7CAF42EC9EBB0D48C645FD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Linha</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Linha]</local-name>
            <parent-name>[States_Migrated Data.csv]</parent-name>
            <remote-alias>Linha</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[States_Migrated Data.csv_64B477EE7CAF42EC9EBB0D48C645FD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Estado</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Estado (States_Migrated Data.csv)]</local-name>
            <parent-name>[States_Migrated Data.csv]</parent-name>
            <remote-alias>Estado</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[States_Migrated Data.csv_64B477EE7CAF42EC9EBB0D48C645FD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sigla do Estado</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sigla do Estado]</local-name>
            <parent-name>[States_Migrated Data.csv]</parent-name>
            <remote-alias>Sigla do Estado</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[States_Migrated Data.csv_64B477EE7CAF42EC9EBB0D48C645FD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Número de registros</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Número de registros]</local-name>
            <parent-name>[States_Migrated Data.csv]</parent-name>
            <remote-alias>Número de registros</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[States_Migrated Data.csv_64B477EE7CAF42EC9EBB0D48C645FD49]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Categoria Estado Vendas' datatype='real' name='[Calculation_1018657971633291264]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Estado],[Categoria]: SUM([Vendas])}' />
      </column>
      <column caption='Maior Estado Vendas' datatype='real' name='[Calculation_1018657971634540545]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [Estado]: MAX([Calculation_1018657971633291264])}' />
      </column>
      <column caption='Maior Categoria Estado' datatype='string' name='[Calculation_1018657971634868226]' role='measure' type='nominal'>
        <calculation class='tableau' formula='MAX(IF [Calculation_1018657971634540545]= [Calculation_1018657971633291264] THEN [Categoria]END)' />
      </column>
      <column caption='Percentual do Saldo' datatype='real' name='[Calculation_1018657971687743491]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Saldo Atual])/ TOTAL(SUM([Saldo Atual]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentual Saldo Acumulado' datatype='real' name='[Calculation_1018657971688218628]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_1018657971687743491])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentual de Contas' datatype='real' name='[Calculation_1018657971688681477]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Conta Bancária])/ TOTAL(COUNTD([Conta Bancária]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Percentual de Contas Acumuladas' datatype='real' name='[Calculation_1018657971689172998]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RUNNING_SUM([Calculation_1018657971688681477])'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[Cidade]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Conta Bancária]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Código Postal]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Estado (States Migrated Data.csv)' datatype='string' name='[Estado (States_Migrated Data.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Número de registros (Bank Migrated Data.csv)' datatype='integer' name='[Número de registros (Bank_Migrated Data.csv)]' role='measure' type='quantitative' />
      <column datatype='string' name='[Pais]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Saldo Atual]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Bank_Migrated Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Bank_Migrated Data.csv_D58785A74B514CB7ABF36824D7324020]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='States_Migrated Data.csv' datatype='table' name='[__tableau_internal_object_id__].[States_Migrated Data.csv_64B477EE7CAF42EC9EBB0D48C645FD49]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Superstore_Superstore.csv' datatype='table' name='[__tableau_internal_object_id__].[Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554]' role='measure' type='quantitative' />
      <column-instance column='[Saldo Atual]' derivation='Sum' name='[sum:Saldo Atual:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1018657971687743491]' derivation='User' name='[usr:Calculation_1018657971687743491:qk:4]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_1018657971688218628]' derivation='User' name='[usr:Calculation_1018657971688218628:qk:5]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
        <table-calc field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Calculation_1018657971687743491]' ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971687743491:qk:4]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Bank_Migrated Data.csv' id='Bank_Migrated Data.csv_D58785A74B514CB7ABF36824D7324020'>
            <properties context=''>
              <relation connection='textscan.0pt0d6j1nxauku1and5921huqdes' name='Bank_Migrated Data.csv' table='[Bank_Migrated Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='string' name='Conta Bancária' ordinal='0' />
                  <column datatype='integer' name='Saldo Atual' ordinal='1' />
                  <column datatype='integer' name='Número de registros' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='States_Migrated Data.csv' id='States_Migrated Data.csv_64B477EE7CAF42EC9EBB0D48C645FD49'>
            <properties context=''>
              <relation connection='textscan.1m3zgvr0wh4czu1h0kh3e1hqe4z9' name='States_Migrated Data.csv' table='[States_Migrated Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='integer' name='Coluna' ordinal='0' />
                  <column datatype='integer' name='Linha' ordinal='1' />
                  <column datatype='string' name='Estado' ordinal='2' />
                  <column datatype='string' name='Sigla do Estado' ordinal='3' />
                  <column datatype='integer' name='Número de registros' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Superstore_Superstore.csv' id='Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554'>
            <properties context=''>
              <relation connection='textscan.0f46fnf04cjv4c1bdac5m1bwhpqd' name='Superstore_Superstore.csv' table='[Superstore_Superstore#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=';'>
                  <column datatype='string' name='Categoria' ordinal='0' />
                  <column datatype='string' name='Cidade' ordinal='1' />
                  <column datatype='string' name='Pais' ordinal='2' />
                  <column datatype='string' name='ID Cliente' ordinal='3' />
                  <column datatype='string' name='Nome Cliente' ordinal='4' />
                  <column datatype='date' name='Data da Nota Fiscal' ordinal='5' />
                  <column datatype='string' name='Numero da Nota Fiscal' ordinal='6' />
                  <column datatype='integer' name='Código Postal' ordinal='7' />
                  <column datatype='string' name='ID Produto' ordinal='8' />
                  <column datatype='string' name='Nome do Produto' ordinal='9' />
                  <column datatype='string' name='Região' ordinal='10' />
                  <column datatype='integer' name='ID da Linha' ordinal='11' />
                  <column datatype='string' name='Segmento' ordinal='12' />
                  <column datatype='date' name='Data do Envio' ordinal='13' />
                  <column datatype='string' name='Modo de Envio' ordinal='14' />
                  <column datatype='string' name='Estado' ordinal='15' />
                  <column datatype='string' name='Sub Categoria' ordinal='16' />
                  <column datatype='string' name='Disconto' ordinal='17' />
                  <column datatype='string' name='Log da Venda' ordinal='18' />
                  <column datatype='integer' name='Número de Registros' ordinal='19' />
                  <column datatype='real' name='Lucro' ordinal='20' />
                  <column datatype='integer' name='Quantidade' ordinal='21' />
                  <column datatype='real' name='Vendas' ordinal='22' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Número de Registros]' />
              <expression op='[Número de registros (Bank_Migrated Data.csv)]' />
            </expression>
            <first-end-point object-id='Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554' />
            <second-end-point object-id='Bank_Migrated Data.csv_D58785A74B514CB7ABF36824D7324020' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Estado]' />
              <expression op='[Estado (States_Migrated Data.csv)]' />
            </expression>
            <first-end-point object-id='Superstore_Superstore.csv_8817A7DD91E944AC9F81087AC8C36554' />
            <second-end-point object-id='States_Migrated Data.csv_64B477EE7CAF42EC9EBB0D48C645FD49' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Clipboard_20240620T081226' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20240620T081226' name='Clipboard_20240620T081226leaf'>
            <connection class='textscan' directory='C:/Users/pri_f/OneDrive/Documents/My Tableau Repository/Datasources' filename='Clipboard_20240620T081226.txt' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='Clipboard_20240620T081226leaf' name='Clipboard_20240620T081226#txt' table='[Clipboard_20240620T081226#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='Ponto ' ordinal='0' />
            <column datatype='integer' name='Latitude' ordinal='1' />
            <column datatype='integer' name='Longitute' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='Clipboard_20240620T081226leaf' name='Clipboard_20240620T081226#txt' table='[Clipboard_20240620T081226#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='integer' name='Ponto ' ordinal='0' />
            <column datatype='integer' name='Latitude' ordinal='1' />
            <column datatype='integer' name='Longitute' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clipboard_20240620T081226#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ponto </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ponto ]</local-name>
            <parent-name>[Clipboard_20240620T081226#txt]</parent-name>
            <remote-alias>Ponto </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20240620T081226]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Clipboard_20240620T081226#txt]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20240620T081226]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitute</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Longitute]</local-name>
            <parent-name>[Clipboard_20240620T081226#txt]</parent-name>
            <remote-alias>Longitute</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20240620T081226]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' datatype='integer' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='integer' name='[Longitute]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Ponto' datatype='integer' name='[Ponto ]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Clipboard_20240620T081226' datatype='table' name='[__tableau_internal_object_id__].[Clipboard_20240620T081226]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Clipboard_20240620T081226' id='Clipboard_20240620T081226'>
            <properties context=''>
              <relation connection='Clipboard_20240620T081226leaf' name='Clipboard_20240620T081226#txt' table='[Clipboard_20240620T081226#txt]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
                  <column datatype='integer' name='Ponto ' ordinal='0' />
                  <column datatype='integer' name='Latitude' ordinal='1' />
                  <column datatype='integer' name='Longitute' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Clipboard_20240620T081227' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20240620T081227' name='Clipboard_20240620T081227leaf'>
            <connection class='textscan' directory='C:/Users/pri_f/OneDrive/Documents/My Tableau Repository/Datasources' filename='Clipboard_20240620T081227.txt' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='Clipboard_20240620T081227leaf' name='Clipboard_20240620T081227#txt' table='[Clipboard_20240620T081227#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='Ponto ' ordinal='0' />
            <column datatype='integer' name='Latitude' ordinal='1' />
            <column datatype='integer' name='Longitute' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='Clipboard_20240620T081227leaf' name='Clipboard_20240620T081227#txt' table='[Clipboard_20240620T081227#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
            <column datatype='string' name='Ponto ' ordinal='0' />
            <column datatype='integer' name='Latitude' ordinal='1' />
            <column datatype='integer' name='Longitute' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clipboard_20240620T081227#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ponto </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Ponto ]</local-name>
            <parent-name>[Clipboard_20240620T081227#txt]</parent-name>
            <remote-alias>Ponto </remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Clipboard_20240620T081227#txt]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitute</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Longitute]</local-name>
            <parent-name>[Clipboard_20240620T081227#txt]</parent-name>
            <remote-alias>Longitute</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' datatype='integer' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column caption='Ponto' datatype='string' name='[Ponto ]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Clipboard_20240620T081227' datatype='table' name='[__tableau_internal_object_id__].[Clipboard_20240620T081227]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Brazil&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Clipboard_20240620T081227' id='Clipboard_20240620T081227'>
            <properties context=''>
              <relation connection='Clipboard_20240620T081227leaf' name='Clipboard_20240620T081227#txt' table='[Clipboard_20240620T081227#txt]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator='&#9;'>
                  <column datatype='string' name='Ponto ' ordinal='0' />
                  <column datatype='integer' name='Latitude' ordinal='1' />
                  <column datatype='integer' name='Longitute' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Donuts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore_Superstore' name='federated.1dumzip0gsafdq14smjow1t4x5gq' />
          </datasources>
          <datasource-dependencies datasource='federated.1dumzip0gsafdq14smjow1t4x5gq'>
            <column caption='Categoria Estado Vendas' datatype='real' name='[Calculation_1018657971633291264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Estado],[Categoria]: SUM([Vendas])}' />
            </column>
            <column caption='Maior Estado Vendas' datatype='real' name='[Calculation_1018657971634540545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Estado]: MAX([Calculation_1018657971633291264])}' />
            </column>
            <column caption='Maior Categoria Estado' datatype='string' name='[Calculation_1018657971634868226]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAX(IF [Calculation_1018657971634540545]= [Calculation_1018657971633291264] THEN [Categoria]END)' />
            </column>
            <column datatype='string' name='[Categoria]' role='dimension' type='nominal' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Categoria]' derivation='None' name='[none:Categoria:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1018657971633291264]' derivation='Sum' name='[sum:Calculation_1018657971633291264:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1018657971634540545]' derivation='Sum' name='[sum:Calculation_1018657971634540545:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1018657971634868226]' derivation='User' name='[usr:Calculation_1018657971634868226:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Calculation_1018657971633291264:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Calculation_1018657971634540545:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Vendas:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='151' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Multiple Values]' />
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971634868226:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk] / [federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk])</rows>
        <cols>[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2A659763-178F-4479-92DA-495A732A946E}' />
    </worksheet>
    <worksheet name='Donuts US'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore_Superstore' name='federated.1dumzip0gsafdq14smjow1t4x5gq' />
          </datasources>
          <datasource-dependencies datasource='federated.1dumzip0gsafdq14smjow1t4x5gq'>
            <column caption='Categoria Estado Vendas' datatype='real' name='[Calculation_1018657971633291264]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Estado],[Categoria]: SUM([Vendas])}' />
            </column>
            <column caption='Maior Estado Vendas' datatype='real' name='[Calculation_1018657971634540545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [Estado]: MAX([Calculation_1018657971633291264])}' />
            </column>
            <column caption='Maior Categoria Estado' datatype='string' name='[Calculation_1018657971634868226]' role='measure' type='nominal'>
              <calculation class='tableau' formula='MAX(IF [Calculation_1018657971634540545]= [Calculation_1018657971633291264] THEN [Categoria]END)' />
            </column>
            <column datatype='string' name='[Categoria]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Coluna]' role='measure' type='quantitative' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Linha]' role='measure' type='quantitative' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Categoria]' derivation='None' name='[none:Categoria:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1018657971634540545]' derivation='Sum' name='[sum:Calculation_1018657971634540545:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Coluna]' derivation='Sum' name='[sum:Coluna:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Linha]' derivation='Sum' name='[sum:Linha:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1018657971634868226]' derivation='User' name='[usr:Calculation_1018657971634868226:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Linha:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Calculation_1018657971634540545:qk]' value='c#,##0,.0K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.5082871913909912' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Linha:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk]' />
              <wedge-size column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Vendas:qk]' />
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.3922650814056396' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Linha:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971634868226:nk]' />
              <wedge-size column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Calculation_1018657971634540545:qk]' />
              <text column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Calculation_1018657971634540545:qk]' />
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.6591712236404419' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Linha:qk] + [federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Linha:qk])</rows>
        <cols>[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Coluna:qk]</cols>
      </table>
      <simple-id uuid='{77C01976-5DF9-43F3-A36D-DE9BF93F4A53}' />
    </worksheet>
    <worksheet name='Grafico de Pareto'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore_Superstore' name='federated.1dumzip0gsafdq14smjow1t4x5gq' />
          </datasources>
          <datasource-dependencies datasource='federated.1dumzip0gsafdq14smjow1t4x5gq'>
            <column caption='Percentual do Saldo' datatype='real' name='[Calculation_1018657971687743491]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Saldo Atual])/ TOTAL(SUM([Saldo Atual]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual Saldo Acumulado' datatype='real' name='[Calculation_1018657971688218628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM([Calculation_1018657971687743491])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual de Contas' datatype='real' name='[Calculation_1018657971688681477]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Conta Bancária])/ TOTAL(COUNTD([Conta Bancária]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual de Contas Acumuladas' datatype='real' name='[Calculation_1018657971689172998]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM([Calculation_1018657971688681477])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Conta Bancária]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Saldo Atual]' role='measure' type='quantitative' />
            <column-instance column='[Conta Bancária]' derivation='None' name='[none:Conta Bancária:nk]' pivot='key' type='nominal' />
            <column-instance column='[Saldo Atual]' derivation='Sum' name='[sum:Saldo Atual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1018657971688218628]' derivation='User' name='[usr:Calculation_1018657971688218628:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
              <table-calc field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Calculation_1018657971687743491]' ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1018657971689172998]' derivation='User' name='[usr:Calculation_1018657971689172998:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
              <table-calc field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Calculation_1018657971688681477]' ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' direction='DESC' using='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]' field-type='quantitative' fold='true' scale='log' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]' value='p0.00%' />
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' />
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]' z-order='2' />
            <reference-line axis-column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]' z-order='1' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' />
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' />
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.086961328983306885' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk] + [federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5])</rows>
        <cols>[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]</cols>
      </table>
      <simple-id uuid='{B8324FB3-47CC-4E08-A283-411736B76B2A}' />
    </worksheet>
    <worksheet name='Grafico de Pareto (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore_Superstore' name='federated.1dumzip0gsafdq14smjow1t4x5gq' />
          </datasources>
          <datasource-dependencies datasource='federated.1dumzip0gsafdq14smjow1t4x5gq'>
            <column caption='Percentual do Saldo' datatype='real' name='[Calculation_1018657971687743491]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Saldo Atual])/ TOTAL(SUM([Saldo Atual]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual Saldo Acumulado' datatype='real' name='[Calculation_1018657971688218628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM([Calculation_1018657971687743491])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual de Contas' datatype='real' name='[Calculation_1018657971688681477]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Conta Bancária])/ TOTAL(COUNTD([Conta Bancária]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual de Contas Acumuladas' datatype='real' name='[Calculation_1018657971689172998]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM([Calculation_1018657971688681477])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Conta Bancária]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Saldo Atual]' role='measure' type='quantitative' />
            <column-instance column='[Conta Bancária]' derivation='None' name='[none:Conta Bancária:nk]' pivot='key' type='nominal' />
            <column-instance column='[Saldo Atual]' derivation='Sum' name='[sum:Saldo Atual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1018657971688218628]' derivation='User' name='[usr:Calculation_1018657971688218628:qk:5]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
              <table-calc field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Calculation_1018657971687743491]' ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_1018657971689172998]' derivation='User' name='[usr:Calculation_1018657971689172998:qk:6]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
              <table-calc field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Calculation_1018657971688681477]' ordering-field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Conta Bancária]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <computed-sort column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' direction='DESC' using='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]' field-type='quantitative' fold='true' scale='log' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]' value='p0.00%' />
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' />
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.20000000000000001' value-column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]' z-order='2' />
            <reference-line axis-column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]' enable-instant-analytics='true' formula='constant' id='refline2' label-type='automatic' scope='per-table' value='0.80000000000000004' value-column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]' z-order='1' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' />
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' />
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.086961328983306885' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk] + [federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:5])</rows>
        <cols>[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:6]</cols>
      </table>
      <simple-id uuid='{3A718306-FF78-4233-AF0D-FB83F45FC407}' />
    </worksheet>
    <worksheet name='Ilha Nula'>
      <table>
        <view>
          <datasources>
            <datasource name='Clipboard_20240620T081226' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Clipboard_20240620T081226'>
            <column aggregation='Avg' datatype='integer' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='integer' name='[Longitute]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Ponto' datatype='integer' name='[Ponto ]' role='measure' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitute]' derivation='Avg' name='[avg:Longitute:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ponto ]' derivation='None' name='[none:Ponto :ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Clipboard_20240620T081226].[avg:Longitute:qk]' field-type='quantitative' max='1538671.4433588283' min='-1185686.5095555745' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[Clipboard_20240620T081226].[avg:Latitude:qk]' field-type='quantitative' max='1054697.1584745613' min='-1603443.6886912235' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <path column='[Clipboard_20240620T081226].[none:Ponto :ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Clipboard_20240620T081226].[avg:Latitude:qk]</rows>
        <cols>[Clipboard_20240620T081226].[avg:Longitute:qk]</cols>
      </table>
      <simple-id uuid='{71CFEC82-47A6-4FC8-9A77-A93E33AB19EA}' />
    </worksheet>
    <worksheet name='Pizza e Mapa'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore_Superstore' name='federated.1dumzip0gsafdq14smjow1t4x5gq' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1dumzip0gsafdq14smjow1t4x5gq'>
            <column datatype='string' name='[Categoria]' role='dimension' type='nominal' />
            <column datatype='string' name='[Estado]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='real' name='[Vendas]' role='measure' type='quantitative' />
            <column-instance column='[Categoria]' derivation='None' name='[none:Categoria:nk]' pivot='key' type='nominal' />
            <column-instance column='[Estado]' derivation='None' name='[none:Estado:nk]' pivot='key' type='nominal' />
            <column-instance column='[Vendas]' derivation='Sum' name='[sum:Vendas:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Latitude (generated)]' field-type='quantitative' fold='true' max='8577698.5054290108' min='663207.27899688296' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Longitude (generated)]' field-type='quantitative' max='-8735015.8702443521' min='-15333581.237187434' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Latitude (generated)]' field-type='quantitative' max='8577698.5054290108' min='663207.27899688296' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Vendas:qk]' />
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]' />
              <geometry column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk]' />
              <wedge-size column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Vendas:qk]' />
              <lod column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.6132595539093018' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1dumzip0gsafdq14smjow1t4x5gq].[Latitude (generated)] + [federated.1dumzip0gsafdq14smjow1t4x5gq].[Latitude (generated)])</rows>
        <cols>[federated.1dumzip0gsafdq14smjow1t4x5gq].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E9DDED88-D789-40CF-BE80-8271ABE74E0E}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource name='Clipboard_20240620T081227' />
          </datasources>
          <datasource-dependencies datasource='Clipboard_20240620T081227'>
            <column aggregation='Avg' datatype='integer' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column datatype='integer' name='[Longitute]' role='measure' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitute]' derivation='Avg' name='[avg:Longitute:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[Clipboard_20240620T081227].[avg:Latitude:qk]</rows>
        <cols>[Clipboard_20240620T081227].[avg:Longitute:qk]</cols>
      </table>
      <simple-id uuid='{DF80176E-3A86-4E25-A888-8E72117BE626}' />
    </worksheet>
    <worksheet name='Tbl de Pareto'>
      <table>
        <view>
          <datasources>
            <datasource caption='Superstore_Superstore' name='federated.1dumzip0gsafdq14smjow1t4x5gq' />
          </datasources>
          <datasource-dependencies datasource='federated.1dumzip0gsafdq14smjow1t4x5gq'>
            <column caption='Percentual do Saldo' datatype='real' name='[Calculation_1018657971687743491]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Saldo Atual])/ TOTAL(SUM([Saldo Atual]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual Saldo Acumulado' datatype='real' name='[Calculation_1018657971688218628]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM([Calculation_1018657971687743491])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual de Contas' datatype='real' name='[Calculation_1018657971688681477]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([Conta Bancária])/ TOTAL(COUNTD([Conta Bancária]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Percentual de Contas Acumuladas' datatype='real' name='[Calculation_1018657971689172998]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RUNNING_SUM([Calculation_1018657971688681477])'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Conta Bancária]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Saldo Atual]' role='measure' type='quantitative' />
            <column-instance column='[Conta Bancária]' derivation='None' name='[none:Conta Bancária:nk]' pivot='key' type='nominal' />
            <column-instance column='[Saldo Atual]' derivation='Sum' name='[sum:Saldo Atual:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1018657971688218628]' derivation='User' name='[usr:Calculation_1018657971688218628:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Calculation_1018657971687743491]' ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Calculation_1018657971689172998]' derivation='User' name='[usr:Calculation_1018657971689172998:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Calculation_1018657971688681477]' ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:2]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:2]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]' direction='DESC' using='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Saldo Atual:qk]' />
          <slices>
            <column>[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971688218628:qk:2]' value='p0.00%' />
            <format attr='text-format' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971689172998:qk:2]' value='p0.00%' />
            <format attr='width' field='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1dumzip0gsafdq14smjow1t4x5gq].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]</rows>
        <cols>[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{366E3FDD-0090-4135-8118-8DFC99756527}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' name='Pizza e Mapa'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Vendas:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor y-index='1'>
                  <x-fields y-index='1'>
                    <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields y-index='1'>
                    <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk]</field>
                  <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]</field>
                  <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[Latitude (generated)]</field>
                  <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Office Supplies&quot;</value>
                <value>&quot;Oregon&quot;</value>
                <value>44.0</value>
                <value>-120.5</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Vendas:ok]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[sum:Vendas:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F2D6261-4F79-4EB0-9EA0-21D9292F26DA}' />
    </window>
    <window class='worksheet' name='Donuts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971634868226:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Segmento:nk]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Vendas:ok]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971634868226:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA887E50-4BAE-4B13-8ED5-A73B4E7E85E1}' />
    </window>
    <window class='worksheet' name='Donuts US'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971634868226:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Categoria:nk]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Estado:nk]</field>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[usr:Calculation_1018657971634868226:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D87BCED0-6466-458C-9766-0B5E77C1EBDF}' />
    </window>
    <window class='worksheet' name='Tbl de Pareto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8067044B-41D4-4E3F-8C5B-79C831E8BC86}' />
    </window>
    <window class='worksheet' name='Grafico de Pareto'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{1597A325-794A-4B72-AEDE-10A9C51DBE21}' />
    </window>
    <window class='worksheet' name='Grafico de Pareto (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.1dumzip0gsafdq14smjow1t4x5gq].[:Measure Names]' type='color' />
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dumzip0gsafdq14smjow1t4x5gq].[none:Conta Bancária:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D976BCFD-D1C4-4EAC-B846-96033D755088}' />
    </window>
    <window class='worksheet' maximized='true' name='Ilha Nula'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{D5ABC17B-0E97-46E8-9A77-9F3338AAF34E}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[Clipboard_20240620T081227].[avg:Latitude:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{44C8A806-120A-4102-A56B-F9E3C4245916}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Donuts' width='192'>
      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
      mtOPNgIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Donuts US' width='192'>
      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
      /9bhOZYb8gWXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Grafico de Pareto' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Grafico de Pareto (2)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAe+klEQVR4nO3daXDc533Y8e//3BO7i13cAAmC4H2IFHVQcWw5jlnLkRN7UqeduMfkfaed
      vsik01eN3WPayfRN2mnStJ20mTipHTupJdmyLlu2bFkySYknSIIEQNz37mLv3f/19MUCFCkR
      BEBisQD3+YygBf67wPOAeH773M9fEUIIJKlBqfXOgCTVk77ySaVSoVAo1DMv244QAkVR6p0N
      qYaUejaB8vk8pmlimuYDXxMOh7cwV1Vzc3Ncu3aNz33uc1ueNoBt2xiGIdOuMX3tl1Q5pQyX
      ro/zxKnjGAjGh64zl3E4fLCHa1dv0t1/kNzMKBWjiScO76OYnuXK4Bj9h44wP3oTLxCnPegx
      MpPhiZMnCJpaDX8tSVqfdQeAHojS0RxGAAiHihfkwC7B0OA0h55+ismrA/hbuggVlyh5kFzM
      8eTTxxi6PESgcw9abpG5ksrJ/g7mMgV64iFc18VxnAc2MxzHwbbtTfhVN8ZxHDzPq0vaAK7r
      1iXdRkt73QEgPBfLsrFsG00FyyqwlBEEmwzS84tgmBTzOTTbpk24qIpLciGFFgpQzGZRLQdV
      EyxmwBePomnVGkDX9QdWeWs9Xyu6rqOqat2aAoBMewusOwDsUo6CbSGmZnBdj75dHSzkXfZ3
      xhm9PcbeAwcpJGdwzDamRobo7u1jcmKK/n37ycxPIAK9RE2PyYUcXdEQAKoqB6Gk+lp3AJih
      GMeOxe651hutPvb19wPg7+ipXohHAOjv3wtAS+fuO9+ztzdy53M5BSHVW13fgmUASPVW1wBY
      6QesRjgOOPXrkEmPv7oGwFo9/vLVq3Dx4hblRmpE27oGkKRa29Y1gCTVmqwBpIYmB+Klhiab
      QFJDk00gqaHJJpDU0ORMsNTQZABIDa2uASBXg0r1Jkug1NBkAEgNra4B4HlePZOXpPoGgDxy
      RKo3GQBSQ5N9AKmhyQCQGpoMAKmhyQCQGpoMAKmhrftcoI+bGRtkyQ2zO6Zw6cYo7d17yC1M
      YKkhnj51jMzMKNdvT7Nr7z4Wxm/j+SK0BqsHYx178hTRwOoH4krSVnnoAOjs6aU8lSaXznP8
      9LNMXblKtKsPc/ls0FzB4ennTjJ08Rbx3v1o2UWWMHj6cILZfJmwqa15NqjrunieK88GlWnX
      zEMGgGB+epKJiRT7d8W5eeUqwWCE9MwEHgbRUg5dFwxcvkFTvIXk5CioJmG/x8Bwht0Hj6Jp
      GoqiPPDsT0fTQNXk2aAy7Zp56BqgKdHByWg7wWCQSKKEPxDCtTrxVJ3k/Cwdu/cSbS0TCAax
      O1pANTE0QaniEAz4ATkRJtXfQ3aCFQLBMJFIE7quEQqF0VQF0x/Abxp09+xCUzVCoRCqouDz
      B/GZOqpmEAoGWCn361kLVPrgw4fLoiStw7ZfCiGc+rTBpcaw7QNAkmpJbomUGtq2rwHKly7j
      VSpbkBupEW37AEBumpFqaEecDFc6d67GOZEa1Y44Gc5JJmucE6lR7Yg9waVfnkPIppBUA9u/
      DwBYIyM4Cws1zo3UiHZEAADMf+PfIeRp0tIm2zH7AdxUisU//i9y7kDaVDtiFGhF6ew5pv/Z
      P8dZWJCBIG2KHTEKdDc3nWb6X/xLlv7iL2W/QHpkD70cut5yr71G7rXXCDz7DE0vvojvwH4U
      ediutA5CCDzPQ1XVnRsAK0pnz1E6ew5zXz/B06cJPncaLZGQwfAY+nizV6z6BYiPX7hDYXxs
      lLHxcXbv2r3zA2CFNTSMNTTM0l/9Nea+fQRPP4tv/36MvX0oui4DYhMIUS1WQgio/le9JqoF
      rmK52I5L2a4+ViwH2/XuXLddF9vxsGwXx/WqnzsOQkDFdrEct7oNVoDrejiuwPU8bNfDdT2E
      ENhOdT7Iu+tzAMt27inyniew3U/OHXW3NNEZKBPv2MWt87fqGwC12v9pDQ1hDQ3d+drcvw/f
      vn2Y+/cTeOoUiqah6I9N7K/LSkH1hMATAiGqBbZYsSmWbfIli7LlkC1UKJYtyna1AFevV19n
      2Q4V26VUcXDc6mPFdrGWC+9WUu78b/nrjw2przbA7jd12oMmt65+SKy1s74BsFU3ybNuDWHd
      GoIfvlZNt7UVo7sb/7GjaIkEgZMnUXzmjqolxHJBdj2B5wnKlkMmXyZTqJAvWSxmiuRLVvXr
      okWuVKFYtimUbQoli2LFvucddD1WCp26XNhUVUFBQVGqBctnapiahs/UMXS1+qip+AwdU1cx
      dA1DVzENHU1VMHQN09BQFTCXPxdCEPAZKCjomoqmrTyqqIqCoVf/RoqiYGgf/b1MQ+PuYq+q
      9z6/QtdUgn7jzu9Q97fBq1evrvpcZfAm6VRq8xNNpWBwEH784zuXfAcPoAQCmHv2oEaayEej
      jE5NEY1GNz/9NXieoGLbgEKp4pAtVgt1drlw50vWcqG2yOTL5EsWJct54M9UUFBVBVVh+VHB
      NKqFzm/oywVYJ2Dq6JqC32dg6BoBU8fQNXymht/U0TUV//I1v6njWy641QK4Ue7yx0ccx0FX
      loult/xx16bAu/cHWnd9XniI1GEbBMCxY8cwzfufEVRSVRbi8a3JyMJi9XF8AoDFcplCMEBP
      Ko2xaxdGVxf+J0+i+nwoponyCCcXeJ7AcT0qtkMyW2I2mWd+qcBipsh8ukAqVyKdLZHOle/b
      jgUNCKCpQbQmlVhUodNnEAn5iIZ9NAVMEtEg4YBJNOSnKWASCfsI+AwCpk7IbxDwG5j6/Qut
      bdt1OxViq9OuewBsZ87sHGVPUL585Z7remcHeksLRu8ejI521EgE35HDAKihEIqiIES1kJct
      h7lUgbl0ganFLBPzWRaWC3sqW8L1PjlaoarVat80NOKRAC3RIM1NflqiQWJNAeJNfmJhP+Gg
      j2jIVy3QvvodY7KTyQB4CM7MLM7MLOUr1eabi0JF1UnpAZInTjMbiDEdaGZuqcBCuviJDuJK
      WzYcMIlHAnTGw7Q1h0hEg7Q3h4hHgjT5dRKxEMYq79LS5pABsEEeUFINknqQcV+MSV+UCV+U
      BT1ESTMhCVABMYMuPPzCodMuknCKtNl59vT30B4P033mMzQ3+TGbY/dNx7ZtWfi3wCMHgOtU
      GJ+YY/eeXcyNDWEZMfZ0t2KX89y4NUr/gUMkp4YRgRYSAY/b00scOrQPXd0ZJ0I4KOQ0P6P+
      GKO+Zm7748wZYYraR/0WVXgEPJtdlSW6rSwdVo4uK0vCKdLslDDEXe3484MAVN54iVnAd/gw
      qCrBZ58BTSX49DMopgmGfG/aCo/8ryxcF6di4VTyZF0fenGBSlcr8xOT9OzuYPTWTdRQDDU1
      x20VOqNB5pYKdDWHlsemxaobY+qx4M0DiqrJYCDMz5QW3u5+ijkjjKNW340VIQh6Fr3lFLsr
      GXqsDLsqGRJOgaD34JGY+6lcv159HBgAIP2//hw1FkVv78DoaMfs68N35DBaNIrS1LRpv+eD
      POhv8ril/cgBoPuCBHzV8VtN19FtBU+AQMUwDYTrohs6qqZQoToGXBQenufd+WVXDYD7dBBr
      wUFhSQ9wLdjG5WAno/4Y2VKRfHKadjNMxKmwp5hiT3mJvkqKNrtA0KvdgV3eUgZrKYM1OEjh
      p+9UL2oaWt8eVNNXHY3y+/CfPImiaaiRyKamLwNgA0qZRSamZyhpPrRymoovyuL4MLH2Fgav
      DbPv0BEWxm/hBhP0BDxuzmQ4frQLTVOrQaNp6KvMytr3mcjYLB6Q1gNcCHVxIdzNpBnBU1QU
      IQi7FQ4V54lkhnhRmaXVKdzbjKkH18UdGsYF7GvXAMgAGAZm3x6M7m6Mnp7lj27UYBA1EHio
      pIQQq/5Nam2r01ZEDdoZlUoFn8+35usymQyBQGD1eYCLF1n4T3+0qXkrKTrXgm38smkXw/4E
      lqqjCY8Wu8Ch0gJPFGbYXVkiXyownM1yuq1tU9PfKloijv/ECYyuLgJPnkSLx9cdEHIe4BGt
      p/DD1i2FEMCS5ufdSC/nwz0kjRCKEMSdIqcyIzxZmKbLyqHdtZwqvyU5qx03maLw47cBWPrm
      X6ElEmixGIFTT6IlEviPHkENhx+6lnhcPJaL4VYIYM4I85PoXi6EuihqJj7P4encJM/mJ+gv
      pzBFY+wzdpNJ3GQSa3j4zjWtJYEWiRJ4+qlqUBw+hNbSUsdcbr3HcjGcADKanx9F+3kv0ktF
      0Yi6Zb6YHuSZ/CRt9sOuHHm8uItJ3MUk1sjInWtGby9avJnIl17E6O5BW2We4nHx2NUAlqLx
      XtNuXo/tJ6f7iThlzmRv8ancOBFXnjG6FntsDHtsjPKFiyiBAHp7+0d7K7q7H7uAeGxqgJXm
      zv9tOcFIIIHuuZzOjfNiapC4W9q0dBqJKJWwR0fJjI4CoASD+A4dxHdgP+HPfhatubm+GdwE
      j0UN4AEXQ118N3GcnGbSaWX5ncUr7C8nV90YIW2cKBYpf3iB8ocXyL78ffS2VoLPPIPe2oq5
      bx9GV2e9s7hhO74G8IDXYgd4o3k/AoVfyY3z5dQ1wjWcqJKqwWCPjpEZHateUBSM3l6Cz50m
      +OwzGF1d9c3gOu3oBSce8Er8MG9F92EIj6+kBng+e1u+69eDEHeaS5m/+Q7G7t0EnztN+LPP
      b+um0o5tAnnAD5sP8lZsP37P5msLlzhVmN68zEkPz/PuBEPule+jtbYSefE3CJx+FnWdc0Rb
      Zcc2gX7R1MvrsQMYnss/mb/AieLsJuZM2ixeoYBXKJD8kz9F+/bfEDj1JKFPfxrfwQP1zhqw
      Q5tA42aUv00cA+Brixdl4d8h3GSS/Jtvkf/x2xi7egicOEno+U9jdHfXLU87rglkKSrfaj2B
      o6h8LjPMM/mpGuRMqinXxR4dwx4dI//WW4Q+/+uEnjuN0dMDW3zn0B3XBPpZpI8JM0qPleHL
      qRs1yJW0lbxCgdzLr5B7+RWMnm6CL75I5NO/Wt0UtAXuCQDPLfD6S69TAjQ9wgtfPoN/S7Kx
      PnnV4M3YPlQEv7t4GR1515jHiT05ReZ//E/y3/kuoec/Q9MXX6j5CNI9C+5VLcQXfusMC4PD
      JAu5mib8MH4W6aOgmjyXG2d3Zane2ZFqxE2nyb70MtO//wcsfevbuOl0zdK6z44Thb59u3Er
      3qrHi9aDpWj8LLIHQ7icWRqSY/0NQBSLZL/3EtO//wfk3ngT4Wx8y+laPtEHUDST7v0HaBFm
      zTsIG+kEXwm2k9N8PJ2fpMUp1jBX0nYjikXSf/6/yb/xJs2/90/xHT68aWe7fqIGUBSdzp5d
      pKcnqfVigo10gt+N9IKi8Ku5Mfnu36DsyUnm/8N/ZOGP/jPO/Pym/MxPBIDnFjj/3lnKmo/t
      ctbYkubntj9OzCnRV65de1DaGcqXLzPzr/41hV+898g/62MBILj2wbsM3p4ns5CseQ2wXjcC
      rTioHC7Oo26rnolUL6JcJvnf/oSlb337ke4e+omG1IEnfgU9MMnswtK2uYXkUCABisL+8qJs
      /kgfcV2y33sJa3iE6O/+Q3z9/Rv+EfeUcdfJ8H/+9C8YHL1O2WtiOyxb8oBhfwJFCPaVkvXO
      jrQNla9cYe7ffJ3i++9v+Hs/Ng8Q4bd++4sYQHJh6p7z1+slpQdJ6wESToGo3NIorcZ1Sf/l
      N3EWFzf0bfcEgKKodPUd5Asv/CZf/ftn2NhktCCXTpIvV8PGcyoMD49guR6LM+PMp3NYxSwj
      o5Ns5MC3GbMJF4WeShZFtv+lB3CTKeb+7b/f0HzBJ5r5rr3ES999hZf/7vuUN5K655JN58jm
      qzPIM+PjhCJ+hm/cZLEoSE2PMzQ+SUApM5PO47runQ/Hce774bou474YKAo9Vka2/6U1ufPz
      JP/7n+HY9qrl6u6PezrBQghcz0dHZ4SKkdjYOiBVpyXRTGo5+jzPxa/roAiEoqECnge6pmEr
      oKoqqqqiadqq8wGaqjFvhAHotLbf0gxpeyr+/F2KZ8/R9MUX1lxPdE8NIESZX/z4Na7enGfs
      2vWN3XfJtRkZv83s5Aw3rt+gpaeXuZkke/cfIKqVCbd107+rg8WioD1WvYvKyiGoiqLc9wMF
      knoQgBZ5lo+0EZZF7uVXmPvDb+Cm06uWsXtqAFUN8PwXfoPiSy+TdUMb6wNoBoePnwSqNYmi
      KBxZvm1QV+++Oy873LSxe36l9OrRfVF3Qw0ySQLAXVhg7g+/Qfd//eP7Pn9PDeC5Bd78/utY
      qkkoEHjoLufH79m6mrWWQlQUnbJq4PMcfF5jHGEobT53YYHca6/f97l7R4HUIGe+9CUO9nUT
      j8dq3ulcazFcSdURCoTdihwBkh5J9vs/wLnPLXc/Ngyq4Lkp3vruO6RLeWr9nrtWDVDUTDwU
      wq4lA0B6JO7iIkvf/OtPXP9YJ1igqDF++/fOUCo6G5wHeIhMrVkDGAgUDOHKIVDpkRXfe+8T
      tcC9fQAnw8/fvcTFi9dws+mazwSvVQOUhIpQVmoASXpEQpB79Yf3XLp3FEgLUMmMEtt7kk47
      W/cNMWW7OqfQKGf4S7WX+8GrIASxf/yPUFT13jKuqD5e+Mo/2LLMrFUD2E51niAs1wBJm0UI
      cj94Fb2tjaYXvlDfFc9r3Z6sWKnuSJA1gLTZcq++ivC87R0AKzWAWof7BUuPN2duntKHF+ob
      AKr64OQrVrUP4H+IG1BL0lqK77+/bTZ93ZftLtcA8gAsqQZK587XNwDWGgWynerzchmEVAui
      UqlvAKw1CuQs1wByFliqlW3dBFphCNkEkmpjWweAZVebPvIoFKlWtnUArNBlDSDVyLbuBHvL
      4/+aDACpRrZ1J3hl/suQM8FSjWzrJpCqVteAanImWKqRbR0AzvJSCNkEkmplWweAplVrALkX
      QKqVbR0AYvkIOU0uhZBqZHsHwPKjXA0q1UrNAkB4Lvl89TCrQi5DoVTBsSuk0hnWW55XTleR
      ASDVSs12PZZyGW6MznDq8G5uDo+DgIAPHNvF1Q7SGgms+TM0VQUhZB9AqpmaBUAwGicRyeJW
      KjR3dqNmF8igcqAzzGzFxnXNOwfjrnaQ1sqGGVPI/QBSbdSsCZRdnGZ4eJjpjMXSxBDJikJM
      dflgcJJ4U+DOJJiu6xiGcd+PlmiQoGfjkxtipBqpWQ0QaenizJkuAHp7uu5c33XXXWzWOkJx
      JpmnqBqUVQP/I9wHSpJWU9dRoLUC4HBnhL5KmrC7He5VIz2O6hoAK8ejr+bmXI7bvmZyWq3P
      qJMaVa3PvnqgtRbDfaUvRNsbl+TR6FLNbOvl0P9vOMd3E8fJahu6V40krdu2rgE+0x2Ed0Zl
      H0CqmboGwFo1wNEwtCUHtig3UiPa1htiJKnWtvViOEmqtW3dCZakWpNNIKmhySaQ1NC29Uyw
      JNXatl4LJEm1JgNAamiyDyA1NBkAUkOTnWCpock+gNTQZABIDU32AaSGJgNAamgyAKSGJgNA
      amhbsCNM3OcsUAXZ/5W2g9oHgOdw48IVInv7Kc+OMpMscOTJp4iHfDVPWpLWUvsAUA327Okl
      q4IwQzx7rJ2ZYoWoX1/zbFC5YUaqtdoHgGtxY/A6OT1AR9jg7NUFjj556hNng96PIzfMSDVW
      +wDQTJ781KfvfHngrqdUVfbBpfqqawkU8sYXUp3JAJAamtwULzU0eSyK1NBkDSA1NNkHkBqa
      DACpodU1AOQ8gFRvshMsNTTZCZYammyDSA1NBoDU0GQfQGposg8gNTTZBJIamgwAqaHJAJAa
      muwESw1NdoKlhlbXO8Vvd0oohNba+tDf7+WyiHJlE3MkbTYZAA8QfPZpEl/96kN/f/Z7L1O+
      fHkTcyRtti0NgFx6gWTeYc+uzq1M9pEMT08zPjtLd2sbE3OztDXHOd6/l6u3bzOzuMih3l4G
      x8dpjcWYT6fp6+pCURT6u7rqnXVpHba0D2AGmvCc0lYm+ch629tpicUoWRVOHTxIxbEBqNg2
      Tx44wMDoGM8dPUrRslBVlYmFBaYWFiiWy3XOubQeWxoAPr8fhZ11KOiFW7dQgKZAkMHxcVzP
      I1ss4nkeg+PjdMbjXBsdRVdVnjp4kJZIlGK5QiqXq3fWpXXY0ibQ7Pgw8/OLhOMdtEYDW5n0
      Qzu0ezelSoVIKERzOEQoGMR1XU7091Mol4mFw6RzOZqCQQRwdE8vPS0JouEw+XpnXlrTnQBw
      HIdyjavtcLydo/F2wCWfz1MqlXAcB8uy7vt6Swjsjo6a5mk1wrJQLBtnZAQDWGm4FT72uiVA
      gU8U9gxgIXDqlH9pfRSxvDF35aDarVQsFjFNE11fvSJyXbdu8wUy7cc/7TslT9O0Lf+lbdvG
      MAxM01z1NY30x5Bpb33a234tUD1ni2Xaj3/a2yYA7HKe8alZvOWjUpJzU6RzJaxilvHpOZxK
      ganZRVyrRMXdvONUyoUMo2OTOK7L1Pg4Zbu6PqmUSzM1l0R4DhNj41Rsm+mpKWzXpVTarL6S
      IL24iCMEs5Pj5MvVIVarlGNsag4hPGYmxilWbOZmpijbm5e28FwmRm9TqDgszkyylK/+XNcq
      MTo+jScE89PjZIsWybkp8mWHUmlzhrA9x2Js9DYly2FpYZbFpfyd6+PjE9iuIDU/TSpbJJOc
      Yylfplwq3edOQ+snhGApuYDlQTm/xOTsIsJzPuoD1EM+n8c0TUzT5Oa1q/h0MNr30eUvcXEo
      heaV0BRBSPOYtQ0MRdASCdO1aze6ujnDqcmFWfK5DKWygx5swrI8jhzYzcCVAQxDQdMMVF+A
      7PwiigF6IEp7RxeJyKOPYrnlLD99432OP3+EuUUQlQLHjx7gxsBVgn4VW/iwFB92Lo2qOqhG
      gHhrFx0t0UdOe2rkBl4wQcLvMTRXQrGKHD12hJHBAQIBjZJjUHRNsHJoooKiaDQlutjV2fLI
      aS+MDZIhSDmXRag6im1z6IljzI3cwDFMymUPywXFLoPmoQiFSHMrPV0dD31rLSEsxi5dIXDo
      FIu3rhJUXcpacPvUAIrho7stRrHsIqwioUQHQb+BYvrpbovQFE2geS7J5CIfXBx4pHeDu5m6
      hqeHaQ6ZJDq60YUNeJi+MPFYhHLRoqWjG38ogN8w8CpFrl26wFLp/iNX6yYEly9eQjdhYWaR
      5o4ufDqAQDMCtLYnKKSyxDu78PtNQn4/QghGrl9hNv3oA6zlUpGZqTGGh0aJtrQRNDU8QNFM
      OrvbKM6niLV3EDA0IqEAwvAzPXyN0enUI6dt+AIkF2ZRUQjFmokGDCwBjqfR0d2Gk8sTjicI
      +w0iTWGEpjM7PsytsZmHTlNRTNra4yAEhj9IZ0uIuZzYPgHQ5FM4PzhHe8glqzZTmhqgJEwi
      hsf5oRR7e1ppa2ulszX2wE7zRo2PjpBcmEcJNnHr4jn8sQRL6TwGBW5PL9Gzu4PrH54j1NJN
      R0c73V0d1ZGrTTjU6/CJp+jb00tH715mrp5FDURZSmcIGR6Xr02y58g+xi+fQ29K0NHZTntH
      Jz6fgbEJ7eT2rm40IYh27SE9cpWKFqCwlCYSNDh7/ha9J46weONDXCNEV2cnrW2d+H06pnn/
      u/lshKKpqALMpiil+QlSjoabTROJhbhwboDW/r3kp4bJCYPujg5aWzsIB81H+rsLp8S1oTFu
      D4/go8Kl8QJPHWjePk0gSaqHbVMDSFI9yACQGpoMAKmhyQCokVJmgZ///OfMLxUf+Wc5VoFk
      annkx3OYm0/e83w5l+Ls+QuUbW9DP3f69iDpor3u1y/MzXPPLm4hmJub31Ca24329a9//ev1
      StyyrLoswdgKczfepZQ4zuVfvkNIt1koCJxShsXFLKnZ2yxVdOZGB6ioYZLTwwxPJbn8xt9x
      220iqivYxSKlSpaLl24Q8tsM3MzQ2x3lyoe/4P3Lk7QEbCbTFVqbg/zg5Vc58cwzaG6Ri5ev
      E42GuDJwHWtpkj//25+wt7eVK5ev0dzSzMDFD1BDccJ+jbd/+B2mik10hhyu3JrE0BScSplS
      PsPAtWuk0ikKtoZrFSkWi1w6e5Z4R5wPz1+mpbOTW5fP8s7ZGyQCHqNzOUJqmQsDt+nobt8x
      76xyS2QNXfngfY7ua+OVl35CYm8fWnaOM7/5a/zkeoW/d3yKP3tngP39eexyjoACsdZOevb3
      cvWX54nhYLf4GLl+iax7HD8Jpm6eJ292Elau8/JrbxNt7mJv3wu4SoBELML7r79KW/8u3vzR
      2+CUyMRb2bNvH5XUDKM3PiBVLJGZnyHY3k/MnWEoqaNnzuGkYnz+zAucf/8sUb9OpbhEqK2N
      6wugjfyC5mjTnd9pbmKU2duXeHVxnlD7IZqDSUaGhzk/MMmnTu9nPiWwPNB3SATIAKiRQLSN
      X//8EfbENbLT0wQ7duP32mlOdBN2rjJZOsSBrii7dvdgl/OYwiMR07h1fQi/kmc6p9LebNLS
      uYvWeBwfTcTbm7jw7gXCbV0cDuuokU40xcfxA228/qOfsreng4Froxw+eIB8Pos/0kz5xjDp
      YjOx1m4SLa0E7Cz5QoXFcpHf+drXWBy5iufafHD5Bn7VYiJZ5mBvJ5HWBL0+E/IV8gtT5JQm
      9nR0IFyXWFs3TZ37mR4eJBBJIJw0fXv7aGlpZX5hFNsBdsjItpwHkBraDqmoJKk2/j8SbIFW
      9k1q3QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ilha Nula' width='192'>
      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
      smV1EgCxjxml+PfOPKth6b7HKAVpwq5K0VkD7RSFkgCI/S00Fm8PWg88xnag1zUMhyn+MGXk
      G/r9bNZIBsFi31sJSwziElrFBKmi6YRbXwtDAwZqdbWrHlCaGgZD6REmDoBOUuDv1o5hmxTb
      TvmC16Zqhxwr9Rn5hkp198kPoLWiVJKlEOKAGBkLjOa8t8HlYZWWGtCI+7iumiyLUKhJCd/N
      0nSWLUshxEGiFL/sVThV7PDazDrViuIW1ckXs5NesXuprgRAHChDCvzAP8RPeosYU2Da3lki
      MZv52RkCCYA4cAyKt4dN/n7tKH5S2PF+iiFFobcmQCUA4sBqJwX+YX2J9bCy9Z4hmYwDNApL
      AiAOtsBY/NvGAuNk+2FZdiWIMaQSAHHw3YmL/O3qUcY7bocyshhO5MTYaDbiu5dMSABELiRo
      /nF9kQ+HM4ySyeMvKY0o8iQbD8xS102+VFvnSNKWK4DIGaXoGYealXK1LbNAIocMil8MmnhK
      FsOJnLoWetx2npMrgMgPBXiWYrNMaKSkLIrIkZqjcN74F0r1FsnCCepuQQIg8kMB4+GQSsnF
      3LpEr3NbboFEfqQG5k6/jP/S76EwVJeOyxVA5EcvNgwaJ0gjsE58VXqEifzZLDefTIpEyC2Q
      yDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1
      CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmA
      yDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1
      CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmA
      yDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyDUJgMg1CYDINQmAyLX/A2AG
      hp3LBAllAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pizza e Mapa' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEJElEQVR4nO3Zy24bZRjH4deZyYEkEjWEFpUqCEoXFUiIPSy4BNggLorrQOIeKrFhiVgU
      VIlTEW2pIClJmlPjQ8wGaIstQiOTVv4/z2o0+vz59cg/jy13RqPRqCDU3NMeAJ6m9q+DT774
      +lQbXFxdqo/ffuM/rR0MBtW27ckLz2ifae41yzPN8mtzByCaAIgmAKIJgGgCIJoAiCYAogmA
      aAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJ
      gGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCi
      CYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYA
      ogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgm
      AKIJgGgCIJoAiDYxgP3NW/Xr9z/V8VlPA2dsYgD9w93a+Pa7Gp31NHDGxgIYHOzUvdubtdJd
      EQAzbyyAdvn5unD59WpXVvxAYOZNfI/PNW0d93ruAMy8iQEM+/2aa5rHT46Gtf3Lnaqq6h/s
      1M7G5hM90bUvf6xPr31TG9v7p5sU/gft+KlB3bl+vZa65x87e//u7Wo7w9o9OK7Faqu/t1l7
      c1VbO8d1cOViNU1Tw+Gwqmrs+O693Tp8cFQfvnulPvv8Rn30/tV/XX/ScVVVr9c71WP/edzr
      9appmmdmn+FwWMPhsBYWFk41w6OP63Q6U7lOs3y9JwQwqu6l9To6fPgVqLe3Vb2jfi2tPFfz
      853q39+rc+uvVdvMVXd1qZaXl8e3ecTLa0199cNG3bi1VZcvrZ24/iSDwaDadsLop9A0zVT2
      mtY+Vad/fYuLi1PZZ1rzTPKsXe8JO3Rq6/bPtdQ9X50/zyysdmtttftwyYsXnuhJlhba+uC9
      q1O9kDANE34DtPXC+kv1+81b/ghj5k38OO6++mYNHsz9fQeAWTUWQH9/u367ebN6u4fuAMy8
      sQDmV87VK2+98zRmgTPnz16iCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBo
      AiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmA
      aAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJ
      gGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCi
      CYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBofwDDY0+WMZ2CFQAAAABJRU5E
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Tbl de Pareto' width='192'>
      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
      3xFgJLVhYUcdAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
